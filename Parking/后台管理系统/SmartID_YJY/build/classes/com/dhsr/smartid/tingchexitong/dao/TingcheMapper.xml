<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dhsr.smartid.tingchexitong.dao.TingcheMapper">
	<sql id="parkInfoSql">ParkInfoInnerId,ParkInfoId,ParkInfoName,Remark,DelFlag,CarsNumber,CurrentCarNumber,VisNumber,CurrentVisNumber</sql>
	<sql id="parkInfoSqlNoId">ParkInfoId,ParkInfoName,Remark,DelFlag,CarsNumber,CurrentCarNumber,VisNumber,CurrentVisNumber</sql>
	<sql id="userCarInfoSql">UserInnerId,UserId,UserName,CompanyInnerId,DepartmentInnerId,DelFlag,CarDelFlag,CarNumber,CarTypeInnerId,StartTime,EndTime,Remark,DepartmentName,CarTypeName,CarInfoInnerId,CarNumber1,CarNumber2,CarNumber3,CarNumber4,ParkingNum,ParkInfo</sql>
	<sql id="carTypeSql">CarTypeInnerId,CarTypeId,CarTypeName,Remark,DelFlag</sql>
	<sql id="carTypeSqlNoId">CarTypeId,CarTypeName,Remark,DelFlag</sql>
	<sql id="passRulesSqlNoId">PassRulesId,PassRulesName,StartTime,EndTime,Remark,DelFlag,FreeTime,Money,CarTypeInnerId</sql>
	<sql id="passRulesSql">PassRulesInnerId,PassRulesId,PassRulesName,StartTime,EndTime,Remark,DelFlag,FreeTime,Money,CarTypeInnerId</sql>
	<sql id="holidaySql">HolidayInnerId,HolidayName,StartDate,EndDate,ISFills,Remark,DelFlag,StandbyA,StandbyB</sql>
	<sql id="holidaySqlNoId">HolidayName,StartDate,EndDate,ISFills,Remark,DelFlag,StandbyA,StandbyB</sql>
	<sql id="carRecordSqlNoId">CarNumber,EntryTime,InOrOut,ChannelId,ChannelName,ImagePath,GUID,StandbyA,StandbyB,Type,Flag,RecordID</sql>
	<sql id="carRecordSql">CarRecordInnerId,CarNumber,EntryTime,InOrOut,ChannelId,ChannelName,ImagePath,GUID,StandbyA,StandbyB,Type,Flag,RecordID</sql>
	<sql id="OrderRecordSql">RecordInnerId,VisitorInfoInnerId,VisitorName,VisitorEmail,VisitorIDCode,VisitorCompany,UserInnerId,VisitorThing,VisitorPhoto,VisitorInPhoto,VisitorNum,VisitorCarCode,VisitorBeginTime,VisitorEndTime,RecordTime,OrderType,OrderCode,UserName,DepartMentName,VisitorState,ApproveTime,CameraState,Remark,CardId,ACInfo</sql>
	<sql id="ChargeRecordSql">ChargeRecordInnerId,RecDateTime,CarNumber,InTime,OutTime,Money,CarType,StandbyA,StandbyB,ChargeState,VisRecordInnerId,ChargeType,ChargeTime,OrderNo</sql>
	<sql id="ChargeRecordSqlNoId">RecDateTime,CarNumber,InTime,OutTime,Money,CarType,StandbyA,StandbyB,ChargeState,VisRecordInnerId,ChargeTime,ChargeType,OrderNo</sql>
	<sql id="CarRecord_UserSql">CarRecordInnerId,UserInnerId,CarNumber,EntryTime,InOrOut,ChannelId,ChannelName,ImagePath,GUID,Type,Flag,StandbyB,StandbyA,CarTypeInnerId,StartTime,EndTime,UserId,UserName,DepartmentInnerId,DepartmentName</sql>
	<sql id="YYCarRecord_UserSql">CarRecordInnerId,CarNumber,EntryTime,InOrOut,ChannelId,ChannelName,ImagePath,GUID,Type,Flag,StandbyB,StandbyA,VisitorName,VisitorCompany</sql>
	<sql id="VisChargeRecordInfoSql">ChargeRecordInnerId,RecDateTime,CarNumber,InTime,OutTime,Money,CarType,CarTypeName,ChargeState,OrderNo,StandbyA,ChargeTime,ChargeType,StandbyB,VisRecordInnerId,VisitorName,VisitorIDCode,VisitorCompany</sql>
	<sql id="parkChargeInfoSql">ChargeRecordInnerId,UserInnerId,VisitorName,UserTypeInnerId,UserName,DepartmentInnerId,RecDateTime,CarNumber,InTime,OutTime,Money,CarType,ChargeState,VisRecordInnerId,ChargeType,ChargeTime,DepartmentName</sql>
	<sql id="ConLogUserSql">ConLogInnerId,MarkInnerId,MarkId,MarkTypeInnerId,UserInnerId,DepartmentInnerId,CompanyInnerId,ConTerminalInnerId,TerminalTypeInnerId,MerchantInnerId,AppInnerId,AreaInnerId,PersonMoney,AllowanceMoney,NumberMoney,PersonBFMoney,PersonAFMoney,AllowanceBFMoney,AllowanceAFMoney,NumberBFMoney,NumberAFMoney,Money1,Money2,Money,DiscountMoney,Proportion,ConDatetime,UploadDatetime,ConTypeInnerId,ConPattern,ConWay,LimitTimes,OffLine,ErrorConLogInnerId,Operator,Remark,StandbyA,StandbyB,StandbyC,StandbyD,MarkName,MarkTypeId,MarkTypeName,UserId,UserName,DepartmentId,DepartmentName,CompanyId,CompanyName,ConTerminalId,ConTerminalName,TerminalTypeId,TerminalTypeName,MerchantId,MerchantName,AppId,AppName,AreaId,AreaName,ConTypeId,ConTypeName,Rules</sql>


	<!-- 查询停车场信息 -->
	<select id="selectParkInfo" parameterType="Map" resultType="ParkInfo">
		SELECT TOP ${rows}
		<include refid="parkInfoSql" />
		FROM (SELECT ROW_NUMBER() OVER (ORDER BY ${sort}
		${order}) AS RowNumber,
		<include refid="parkInfoSql" />
		FROM Park_Info
		where DelFlag=0
		<if test="ParkInfoId !=null and ParkInfoId !='' ">
			and ParkInfoId like '%${ParkInfoId}%'
		</if>
		<if test="ParkInfoName !=null and ParkInfoName !='' ">
			and ParkInfoName like '%${ParkInfoName}%'
		</if>
		<if test="Remark !=null and Remark !='' ">
			and Remark like '%${Remark}%'
		</if>
		) as A
		WHERE RowNumber > ${start}
	</select>
	
	<!-- 查询停车场信息总数 -->
	<select id="selectParkInfoTotal" parameterType="Map" resultType="Integer">
		SELECT count(ParkInfoInnerId)
		FROM Park_Info
		where DelFlag=0
		<if test="ParkInfoId !=null and ParkInfoId !='' ">
			and ParkInfoId like '%${ParkInfoId}%'
		</if>
		<if test="ParkInfoName !=null and ParkInfoName !='' ">
			and ParkInfoName like '%${ParkInfoName}%'
		</if>
		<if test="Remark !=null and Remark !='' ">
			and Remark like '%${Remark}%'
		</if>
	</select>
	
	<!-- 新增停车场信息 -->
	<insert id="insertParkInfo" parameterType="ParkInfo">
		insert into Park_Info (<include refid="parkInfoSqlNoId"></include>) values
		(#{ParkInfoId},#{ParkInfoName},#{Remark},0,#{CarsNumber},#{CurrentCarNumber},#{VisNumber},#{CurrentVisNumber})
	</insert>
	
	<!-- 更新停车场信息 -->
	<update id="updateParkInfo" parameterType="ParkInfo">
	    update Park_Info set
	    ParkInfoName = #{ParkInfoName},
	    ParkInfoId = #{ParkInfoId},
	    CarsNumber = #{CarsNumber},
	    CurrentCarNumber = #{CurrentCarNumber},
	    VisNumber = #{VisNumber},
	    CurrentVisNumber = #{CurrentVisNumber},
	    Remark = #{Remark}
	    where ParkInfoInnerId = #{ParkInfoInnerId}
	</update>
	
	<select id="selectParkInfoByInnerId" parameterType="Integer" resultType="ParkInfo">
		select <include refid="parkInfoSql"></include> from Park_Info where ParkInfoInnerId = #{innerId} and DelFlag = 0
	</select>
	
	<!-- 查询车辆信息 -->
	<select id="selectUserCarInfo" parameterType="Map" resultType="UserCarInfo">
		select TOP ${rows}
		<include refid="userCarInfoSql" />
		FROM (SELECT ROW_NUMBER() OVER (ORDER BY ${sort}
		${order}) AS RowNumber,
		<include refid="userCarInfoSql" />
		FROM Park_UserCar
		where DelFlag=0
		<if test="UserId !=null and UserId !='' ">
			and UserId like '%${UserId}%'
		</if>
		<if test="UserName !=null and UserName !='' ">
			and UserName like '%${UserName}%'
		</if>
		<if test="CarNumber !=null and CarNumber !='' ">
			and (CarNumber like '%${CarNumber}%' or CarNumber1 like '%${CarNumber}%' or CarNumber2 like '%${CarNumber}%' or CarNumber3 like '%${CarNumber}%' or CarNumber4 like '%${CarNumber}%')
		</if>
		<if test="DepartmentInnerId !=null and DepartmentInnerId !='' ">
			and DepartmentInnerId in (select str2table from StrToTable(#{DepartmentInnerId}))
		</if>
		<if test="CarTypeInnerId !=null and CarTypeInnerId !='' ">
			and CarTypeInnerId in (select str2table from StrToTable(#{CarTypeInnerId}))
		</if>
		) as A
		WHERE RowNumber > ${start}
	</select>
	
	<!-- 查询车辆信息总数 -->
	<select id="selectUserCarInfoTotal" parameterType="Map" resultType="Integer">
		select count(*)
		FROM Park_UserCar
		where DelFlag=0
		<if test="UserId !=null and UserId !='' ">
			and UserId like '%${UserId}%'
		</if>
		<if test="UserName !=null and UserName !='' ">
			and UserName like '%${UserName}%'
		</if>
		<if test="CarNumber !=null and CarNumber !='' ">
			and (CarNumber like '%${CarNumber}%' or CarNumber1 like '%${CarNumber}%' or CarNumber2 like '%${CarNumber}%' or CarNumber3 like '%${CarNumber}%' or CarNumber4 like '%${CarNumber}%')
		</if>
		<if test="DepartmentInnerId !=null and DepartmentInnerId !='' ">
			and DepartmentInnerId in (select str2table from StrToTable(#{DepartmentInnerId}))
		</if>
		<if test="CarTypeInnerId !=null and CarTypeInnerId !='' ">
			and CarTypeInnerId in (select str2table from StrToTable(#{CarTypeInnerId}))
		</if>
	</select>
	
	<!-- 新增车辆类型 -->
	<insert id="insertCarType" parameterType="CarType">
		insert into Park_CarType (<include refid="carTypeSqlNoId"></include>) 
		values (#{CarTypeId},#{CarTypeName},#{Remark},0)
	</insert>
	
	<!-- 修改车辆类型 -->
	<insert id="updateCarType" parameterType="CarType">
		update Park_CarType set
		CarTypeId = #{CarTypeId},
		CarTypeName = #{CarTypeName},
		Remark = #{Remark}
		where CarTypeInnerId = #{CarTypeInnerId}
	</insert>
	
	<!-- 查询车辆类型 -->
	<select id="selectCarType" parameterType="Map" resultType="CarType">
		select TOP ${rows}
		<include refid="carTypeSql" />
		FROM (SELECT ROW_NUMBER() OVER (ORDER BY ${sort}
		${order}) AS RowNumber,
		<include refid="carTypeSql" />
		FROM Park_CarType
		where DelFlag=0 
		<if test="CarTypeId !=null and CarTypeId !='' ">
			and CarTypeId like '%${CarTypeId}%'
		</if>
		<if test="CarTypeName !=null and CarTypeName !='' ">
			and CarTypeName like '%${CarTypeName}%'
		</if>
		<if test="Remark !=null and Remark !='' ">
			and Remark like '%${Remark}%'
		</if>
		) as A
		WHERE RowNumber > ${start}
	</select>
	
	<!-- 查询车辆类型总数 -->
	<select id="selectCarTypeTotal" parameterType="Map" resultType="Integer">
		select count(CarTypeInnerId)
		FROM Park_CarType
		where DelFlag=0 
		<if test="CarTypeId !=null and CarTypeId !='' ">
			and CarTypeId like '%${CarTypeId}%'
		</if>
		<if test="CarTypeName !=null and CarTypeName !='' ">
			and CarTypeName like '%${CarTypeName}%'
		</if>
		<if test="Remark !=null and Remark !='' ">
			and Remark like '%${Remark}%'
		</if>
	</select>
	<select id="selectCarTypeByInnerId" parameterType="Integer" resultType="CarType">
		select <include refid="carTypeSql"></include>
		FROM Park_CarType
		where CarTypeInnerId = #{innerId}
	</select>
	
	<!-- 新增车辆信息 -->
	<insert id="insertCarInfo" parameterType="CarInfo" useGeneratedKeys="true" keyProperty="CarInfoInnerId">
		insert into Park_Car (CarNumber,CarNumber1,CarNumber2,CarNumber3,CarNumber4,UserInnerId,CarTypeInnerId,StartTime,EndTime,Remark,DelFlag,ParkingNum,ParkInfo)  values 
		(#{CarNumber},#{CarNumber1},#{CarNumber2},#{CarNumber3},#{CarNumber4},#{UserInnerId},#{CarTypeInnerId},#{StartTime},#{EndTime},#{Remark},0,#{ParkingNum},#{ParkInfo})
	</insert>
	
	<!-- 修改车辆信息 -->
	<update id="updateCarInfo" parameterType="CarInfo">
		update Park_Car set 
		CarTypeInnerId = #{CarTypeInnerId},
		CarNumber = #{CarNumber},
		CarNumber1 = #{CarNumber1},
		CarNumber2 = #{CarNumber2},
		CarNumber3 = #{CarNumber3},
		CarNumber4 = #{CarNumber4},
		StartTime = #{StartTime},
		EndTime = #{EndTime},
		ParkInfo = #{ParkInfo},
		ParkingNum = #{ParkingNum}
		where CarInfoInnerId = #{CarInfoInnerId}
	</update>
	
	<!-- 新增通行规则 -->
	<insert id="insertPassRules" parameterType="PassRules">
		insert into Park_PassRule (<include refid="passRulesSqlNoId"></include>) values
		(#{PassRulesId},#{PassRulesName},#{StartTime},#{EndTime},#{Remark},0,#{FreeTime},#{Money},#{CarTypeInnerId})
	</insert>
	
	<update id="updatePassRules" parameterType="PassRules">
		update Park_PassRule set 
		PassRulesId = #{PassRulesId},
		PassRulesName = #{PassRulesName},
		StartTime = #{StartTime},
		EndTime = #{EndTime},
		Remark = #{Remark},
		FreeTime = #{FreeTime},
		Money = #{Money},
		CarTypeInnerId = #{CarTypeInnerId}
		where PassRulesInnerId = #{PassRulesInnerId}
	</update>
	
	<!-- 查询通行规则 -->
	<select id="selectPassRules" parameterType="Map" resultType="PassRules">
		select TOP ${rows}
		<include refid="passRulesSql" />
		FROM (SELECT ROW_NUMBER() OVER (ORDER BY ${sort}
		${order}) AS RowNumber,
		<include refid="passRulesSql" />
		FROM Park_PassRule
		where DelFlag=0 
		<if test="PassRulesId !=null and PassRulesId !='' ">
			and PassRulesId like '%${PassRulesId}%'
		</if>
		<if test="PassRulesName !=null and PassRulesName !='' ">
			and PassRulesName like '%${PassRulesName}%'
		</if>
		<if test="Remark !=null and Remark !='' ">
			and Remark like '%${Remark}%'
		</if>
		) as A
		WHERE RowNumber > ${start}
	</select>
	
	<!-- 查询通行规则总数 -->
	<select id="selectPassRulesTotal" parameterType="Map" resultType="Integer">
		select count(PassRulesInnerId)
		FROM Park_PassRule
		where DelFlag=0 
		<if test="PassRulesId !=null and PassRulesId !='' ">
			and PassRulesId like '%${PassRulesId}%'
		</if>
		<if test="PassRulesName !=null and PassRulesName !='' ">
			and PassRulesName like '%${PassRulesName}%'
		</if>
		<if test="Remark !=null and Remark !='' ">
			and Remark like '%${Remark}%'
		</if>
	</select>
	
	<!-- 查询考勤节假日信息 -->
	<select id="selectAttendanceHoliday" parameterType="Map" resultType="Holiday">
	    select <include refid="holidaySql"></include> 
	    from Park_Holiday where DelFlag = 0 
	    <if test="year !=null ">
			and convert(nvarchar(4),StartDate,120) = #{year}
		</if>
	</select>
	
	<select id="selectAttendanceHolidayCount" parameterType="Map" resultType="int">
	    select count(HolidayInnerId) from Park_Holiday where DelFlag = 0 and StartDate = #{StartDate}
	</select>

	<!-- 插入考勤节假日-->
	<insert id="insertAttendanceHoliday" useGeneratedKeys="true" keyProperty="HolidayInnerId"  parameterType="Holiday">    
	    insert into Park_Holiday (<include refid="holidaySqlNoId"></include>) 
	    values (#{HolidayName},#{StartDate},#{EndDate},#{ISFills},#{Remark},0,#{StandbyA},#{StandbyB})
	</insert> 
	<!-- 修改考勤节假日 -->
	<update id="updateAttendanceHoliday" parameterType="Holiday">
	    update Park_Holiday set
	    HolidayName = #{HolidayName},
	   	StartDate = #{StartDate},
	    EndDate = #{EndDate},
	    ISFills =  #{ISFills},
	    Remark = #{Remark},
	    StandbyA = #{StandbyA},
	    StandbyB = #{StandbyB}
	    where HolidayInnerId = #{HolidayInnerId} and DelFlag = 0
	</update>
	<!-- 删除考勤节假日 -->
	<delete id="DelAttendanceHoliday" parameterType="int">
	    update Park_Holiday set DelFlag = 1 where HolidayInnerId = #{HolidayInnerId}
	</delete>
	
	<!-- 新增车辆通行记录 -->
	<insert id="insertCarRecord" parameterType="CarRecord">
		insert into Park_CarRecord (<include refid="carRecordSqlNoId"></include>) values
		(#{CarNumber},#{EntryTime},#{InOrOut},#{ChannelId},#{ChannelName},#{ImagePath},#{GUID},#{StandbyA},#{StandbyB},#{Type},0,#{RecordID})
	</insert>
	
	<!-- 根据车牌查询车辆信息 -->
	<select id="selectUserCarInfoByCarNumber" parameterType="String" resultType="UserCarInfo">
		select * from Park_UserCar where DelFlag = 0 and (CarNumber = #{carCode} or 
		CarNumber1 = #{carCode} or CarNumber2 = #{carCode} or CarNumber3 = #{carCode} or CarNumber4 = #{carCode})
	</select>
	
	<!-- 根据车牌查询车辆信息 -->
	<select id="selectUserCarByCarNumber" parameterType="String" resultType="UserCarInfo">
		select * from Park_UserCar where  (CarNumber = #{carCode} or 
		CarNumber1 = #{carCode} or CarNumber2 = #{carCode} or CarNumber3 = #{carCode} or CarNumber4 = #{carCode})
	</select>
	
	<!-- 根据车牌查询车辆信息 -->
	<select id="selectUserCarInfoByCarNumberNew" parameterType="Map" resultType="UserCarInfo">
		select * from Park_UserCar where DelFlag = 0 and CarInfoInnerId != #{CarInfoInnerId} and (CarNumber = #{carCode} or 
		CarNumber1 = #{carCode} or CarNumber2 = #{carCode} or CarNumber3 = #{carCode} or CarNumber4 = #{carCode})
	</select>
	
	<!-- 查询车辆通行记录 -->
	<select id="selectCarRecord" parameterType="Map" resultType="CarRecord">
		select TOP ${rows} <include refid="carRecordSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="carRecordSql"></include> 
	    from Park_CarRecord where 1=1 
	    <if test="Flag !=null ">
			and Flag = #{Flag}
		</if>
		<if test="CarNumber != null and CarNumber !=  ''">
			and CarNumber = #{CarNumber}
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	
	<!-- 查询车辆通行记录 -->
	<select id="selectCarRecordTotal" parameterType="Map" resultType="Integer">
		select count(CarRecordInnerId)
	    from Park_CarRecord where 1=1 
	    <if test="Flag !=null ">
			and Flag = #{Flag}
		</if>
	</select>
	
	<!-- 查询车辆收费记录总数 -->
	<select id="selectChargeRecordTotal" parameterType="Map" resultType="Integer">
		select count(ChargeRecordInnerId) from Park_ChargeRecord
		where 1 = 1
		<if test="DateTime != null and DateTime != ''">
			and RecDateTime = #{DateTime}
		</if>
		<if test="CarNumber != null and CarNumber != ''">
			and CarNumber = #{CarNumber}
		</if>
	</select>
	
	<!-- 查询预约车辆信息 -->
	<select id="selectVisCarInfo" parameterType="Map" resultType="OrderRecord">
		select TOP ${rows} <include refid="OrderRecordSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="OrderRecordSql"></include> 
	    from Visitor_OrderRecord where 1=1 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and VisitorCarCode = #{CarNumber}
		</if>
	    <if test="DateTime !=null and DateTime != '' ">
			and convert(nvarchar(10),RecordTime,120) = #{DateTime}
		</if>
	    <if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and VisitorBeginTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	    <if test="VisitorState !=null ">
			and VisitorState in (1,4,5,7)
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	
	<select id="selectOrderRecordByMap" parameterType="Map" resultType="OrderRecord">
		select TOP 1 <include refid="OrderRecordSql"></include> 
	    from Visitor_OrderRecord where 1=1 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and VisitorCarCode = #{CarNumber}
		</if>
	    <if test="time !=null and time != '' ">
			and cast(#{time} as datetime) between DATEADD(hh,-2,VisitorBeginTime) and VisitorEndTime
		</if>
	    <if test="VisitorState !=null ">
			and VisitorState in (select str2table from StrToTable(#{VisitorState}))
		</if>
	    order by RecordInnerId desc
	</select>
	
	<!-- 查询未付款的记录 -->
	<select id="selectChargeRecord" parameterType="Map" resultType="ChargeRecord">
		select top 1 <include refid="ChargeRecordSql"></include> from Park_ChargeRecord
		where Money is null and ChargeState != 3 
		<if test="DateTime != null and DateTime != '' ">
			and RecDateTime = #{DateTime}
		</if>
		<if test="CarNumber != null and CarNumber != '' ">
			and CarNumber = #{CarNumber}
		</if>
		order by ChargeRecordInnerId desc
	</select>
	
	<!-- 查询未付款的记录 -->
	<select id="selectChargeRecordInfoByMap" parameterType="Map" resultType="ChargeRecord">
		select top 1 <include refid="ChargeRecordSql"></include> from Park_ChargeRecord
		where CarNumber = #{CarCode} and (InTime = #{InTime} or OutTime = #{OutTime}) order  by ChargeRecordInnerId desc
	</select>
	
	<!-- 查询待付款的记录 -->
	<select id="selectChargeRecordWaitPayMoney" parameterType="Map" resultType="ChargeRecord">
		select <include refid="ChargeRecordSql"></include> from Park_ChargeRecord
		where ChargeState in (2,4,5) or ChargeState is null 
	</select>
	
	<!-- 更新停车收费信息 -->
	<update id="updateChargeRecord" parameterType="ChargeRecord">
		update Park_ChargeRecord set 
		InTime = #{InTime},
		OutTime = #{OutTime},
		Money = #{Money},
		ChargeState = #{ChargeState},
		ChargeTime = #{ChargeTime},
		ChargeType = #{ChargeType},
		OrderNo = #{OrderNo},
		StandbyA = #{StandbyA},
		StandbyB = #{StandbyB}
		where ChargeRecordInnerId = #{ChargeRecordInnerId}
	</update>
	
	<!-- 查询预约车总数 -->
	<select id="selectReservationCarTotal" parameterType="Map" resultType="Integer">
		select count(RecordInnerId) from Visitor_OrderRecord
		where 1=1
		<if test="CarNumber != null and CarNumber != '' ">
			and VisitorCarCode = #{CarNumber}
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and VisitorBeginTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="time !=null and time != '' ">
			and cast(#{time} as datetime) between DATEADD(hh,-2,VisitorBeginTime) and VisitorEndTime
		</if>
		<if test="VisitorState !=null and VisitorState != '' ">
			and VisitorState in (select str2table from StrToTable(#{VisitorState}))
		</if>
	</select>
	
	<!-- 新增停车收费记录 -->
	<insert id="insertChargeRecord" parameterType="ChargeRecord" useGeneratedKeys="true" keyProperty="ChargeRecordInnerId">
		insert into Park_ChargeRecord (<include refid="ChargeRecordSqlNoId"></include>,Name,DepName) values 
		(#{RecDateTime},#{CarNumber},#{InTime},#{OutTime},#{Money},#{CarType},#{StandbyA},#{StandbyB},#{ChargeState},#{VisRecordInnerId},#{ChargeTime},#{ChargeType},#{OrderNo},#{Name},#{DepName})
	</insert>
	
	<!-- 查询固定车辆信息 -->
	<select id="selectGDCarRecord_User" parameterType="Map" resultType="CarRecord_User">
		select TOP ${rows} <include refid="CarRecord_UserSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="CarRecord_UserSql"></include> 
	    from GDCarRecord_User where Type = 0 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
	    <if test="UserId !=null and UserId != '' ">
			and UserId = #{UserId}
		</if>
	    <if test="UserName !=null and UserName != '' ">
			and UserName = #{UserName}
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	
	<!-- 查询固定车辆信息总数 -->
	<select id="selectGDCarRecord_UserTotal" parameterType="Map" resultType="Integer">
		select count(CarRecordInnerId)
	    from GDCarRecord_User where Type = 0 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
	    <if test="UserId !=null and UserId != '' ">
			and UserId like '%${UserId}%'
		</if>
	    <if test="UserName !=null and UserName != '' ">
			and UserName like '%${UserName}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	</select>
	
	<!-- 查询预约车辆信息 -->
	<select id="selectYYCarRecord_User" parameterType="Map" resultType="YYCarRecord_User">
		select TOP ${rows} <include refid="YYCarRecord_UserSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="YYCarRecord_UserSql"></include> 
	    from YYCarRecord_User where 1=1
	    <if test="Type!=null and Type != ''">
	    	and Type in (select str2table from StrToTable(#{Type}))
	    </if> 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
	    <if test="UserName !=null and UserName != '' ">
			and VisitorName like '%${UserName}%'
		</if>
	    <if test="VisitorCompany !=null and VisitorCompany != '' ">
			and VisitorCompany like '%${VisitorCompany}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	
	<!-- 查询预约车辆信息总数 -->
	<select id="selectYYCarRecord_UserTotal" parameterType="Map" resultType="Integer">
		select count(CarRecordInnerId)
	    from YYCarRecord_User where 1=1
	    <if test="Type!=null and Type != ''">
	    	and Type in (select str2table from StrToTable(#{Type}))
	    </if> 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
	    <if test="UserName !=null and UserName != '' ">
			and VisitorName like '%${UserName}%'
		</if>
	    <if test="VisitorCompany !=null and VisitorCompany != '' ">
			and VisitorCompany like '%${VisitorCompany}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	</select>
	<!-- 查询预约车辆信息 -->
	<select id="selectTSCarRecord" parameterType="Map" resultType="CarRecord">
		select TOP ${rows} <include refid="carRecordSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="carRecordSql"></include> 
	    from Park_CarRecord where Type = 4 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	
	<!-- 查询预约车辆信息总数 -->
	<select id="selectTSCarRecordTotal" parameterType="Map" resultType="Integer">
		select count(CarRecordInnerId)
	    from Park_CarRecord where Type = 4 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	</select>
	
	<select id="selectOrderRecordByVinnerId" parameterType="Integer" resultType="OrderRecord">
		select <include refid="OrderRecordSql"></include> from Visitor_OrderRecord where RecordInnerId = #{visRecordInnerId}
	</select>
	
	<select id="selectCarRecordByCarNumber" parameterType="String" resultType="CarRecord">
		select top 1 * from Park_CarRecord where CarNumber = #{carNumber}
		order by EntryTime desc
	</select>
	
	<select id="selectPassRulesByInnerId" parameterType="Integer" resultType="PassRules">
		select <include refid="passRulesSql"></include> from Park_PassRule where CarTypeInnerId = #{carType} and DelFlag = 0
	</select>
	
	<select id="selectPassRuleByInnerId" parameterType="Integer" resultType="PassRules">
		select <include refid="passRulesSql"></include> from Park_PassRule where PassRulesInnerId = #{innerId} and DelFlag = 0
	</select>
	
	<select id="selectMaxRecordInnerId" resultType="Integer">
		select top 1 RecordID from Park_CarRecord order by RecordID desc
	</select>
	
	<!-- 查询未同步的通行记录 -->
	<select id="selectWWCChargeRecord" parameterType="Map" resultType="ChargeRecord">
		select top 1 * from Park_ChargeRecord
		where ((Money is null and (ChargeState = 2 or ChargeState is null)) or (ChargeState = 3 and OutTime is null and ChargeType = 2))
		<if test="CarNumber != null and CarNumber != ''">
			and CarNumber = #{CarNumber}
		</if>
		<if test="VisInnerId != null and VisInnerId != ''">
			and VisRecordInnerId = #{VisInnerId}
		</if>order by ChargeRecordInnerId desc
	</select>
	
	<!-- 查询车辆收费状态为空的记录 -->
	<select id="selectChargeRecordState" resultType="ChargeRecord">
		select * from Park_ChargeRecord
		where Money is null and  ChargeState is null
	</select>
	
	<select id="selectChargeRecordByInnerId" parameterType="Integer" resultType="ChargeRecord">
		select <include refid="ChargeRecordSql"></include> from Park_ChargeRecord where ChargeRecordInnerId = #{ChargeRecordInnerId}
	</select>
	
	<update id="updateChargeRecordState" parameterType="Map">
		update Visitor_OrderRecord set 
		VisitorState = #{VisitorState}
		where RecordInnerId = #{RecordInnerId}
	</update>	
	
	<select id="selectYCChargeRecord" parameterType="Map" resultType="VisChargeRecordInfo">
		select TOP ${rows} <include refid="VisChargeRecordInfoSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="VisChargeRecordInfoSql"></include> 
	    from VisChargeRecordInfo where ChargeState = 1 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and RecDateTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	
	<select id="selectYCChargeRecordTotal" parameterType="Map" resultType="Integer">
		select count(ChargeRecordInnerId)
	    from VisChargeRecordInfo where ChargeState = 1 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and RecDateTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	</select>
	
<!-- 查询消费记录 -->
	<select id="selectConLog" parameterType="Map" resultType="ConLog_User">
		SELECT TOP ${rows}
		<include refid="ConLogUserSql" />
		FROM (SELECT ROW_NUMBER() OVER (ORDER BY ${sort}) AS RowNumber,
		<include refid="ConLogUserSql" />
		FROM ConLog_User
		where 1=1
		<if test="UserId !=null and UserId !='' ">
			and UserId like '%${UserId}%'
		</if>
		<if test="UserName !=null and UserName !='' ">
			and UserName like '%${UserName}%'
		</if>
		<if test="TimeType !=null and TimeType !='' and TimeType == 'UploadDatetime'">
			and UploadDatetime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="TimeType !=null and TimeType !='' and TimeType == 'ConDatetime'">
			and ConDatetime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="DepartmentInnerId !=null and DepartmentInnerId !=''">
			and DepartmentInnerId in (select str2table from StrToTable(#{DepartmentInnerId}))
		</if>
		<if test="ConWay !=null and ConWay !=''">
			and ConWay in (select str2table from StrToTable(#{ConWay}))
		</if>
		<if test="ConPattern !=null and ConPattern !=''">
			and ConPattern in (select str2table from StrToTable(#{ConPattern}))
		</if>
		<if test="Flag == 1">
			and UserTypeInnerId != -1
		</if>
		<if test="Flag == 2">
			and UserTypeInnerId = -1
		</if>
		) as A
		WHERE RowNumber > ${start}
	</select>

	<!-- 查询消费记录总数 -->
	<select id="selectConLogTotal" parameterType="Map" resultType="Long">
		SELECT count(ConLogInnerId) FROM ConLog_User where 1=1
		<if test="UserId !=null and UserId !='' ">
			and UserId like '%${UserId}%'
		</if>
		<if test="UserName !=null and UserName !='' ">
			and UserName like '%${UserName}%'
		</if>
		<if test="TimeType !=null and TimeType !='' and TimeType == 'UploadDatetime'">
			and UploadDatetime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="TimeType !=null and TimeType !='' and TimeType == 'ConDatetime'">
			and ConDatetime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="DepartmentInnerId !=null and DepartmentInnerId !=''">
			and DepartmentInnerId in (select str2table from StrToTable(#{DepartmentInnerId}))
		</if>
		<if test="ConWay !=null and ConWay !=''">
			and ConWay in (select str2table from StrToTable(#{ConWay}))
		</if>
		<if test="ConPattern !=null and ConPattern !=''">
			and ConPattern in (select str2table from StrToTable(#{ConPattern}))
		</if>
		<if test="Flag == 1">
			and UserTypeInnerId != -1
		</if>
		<if test="Flag == 2">
			and UserTypeInnerId = -1
		</if>
	</select>
	
	<!-- 查询预约车辆信息 -->
	<select id="selectLSCarRecord_User" parameterType="Map" resultType="YYCarRecord_User">
		select TOP ${rows} <include refid="YYCarRecord_UserSql"></include> 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="YYCarRecord_UserSql"></include> 
	    from YYCarRecord_User where Type = 2 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
	    <if test="UserName !=null and UserName != '' ">
			and VisitorName like '%${UserName}%'
		</if>
	    <if test="VisitorCompany !=null and VisitorCompany != '' ">
			and VisitorCompany like '%${VisitorCompany}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	    ) AS a where RowNumber > ${start}
	</select>
	<!-- 查询预约车辆信息 -->
	<select id="selectLSCarRecord_UserTotal" parameterType="Map" resultType="Integer">
		select count(CarRecordInnerId)
	    from YYCarRecord_User where Type = 2 
	    <if test="CarNumber !=null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%'
		</if>
	    <if test="UserName !=null and UserName != '' ">
			and VisitorName like '%${UserName}%'
		</if>
	    <if test="VisitorCompany !=null and VisitorCompany != '' ">
			and VisitorCompany like '%${VisitorCompany}%'
		</if>
		<if test="StartTime !=null and StartTime != '' and EndTime !=null and EndTime != ''">
			and EntryTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
	</select>
	
	<update id="updateCarInfoLFInnerId" parameterType="Map">
		update Park_Car set LFInnerId = #{LFInnerId} where CarInfoInnerId = #{CarInfoInnerId}
	</update>
	
	<select id="selectCarInfoByCarInfoInnerId" parameterType="Integer" resultType="CarInfo">
		select * from Park_Car where CarInfoInnerId = #{carInfoInnerId}
	</select>
	
	<!-- 平台新增特殊车辆预约信息 -->
	<insert id="insertVisitor_OrderRecord" parameterType="Map" >
		insert into Visitor_OrderRecord (VisitorName,VisitorCompany,VisitorThing,CarTypeInnerId,VisitorCarCode,VisitorBeginTime,VisitorState,OrderType,VisitorEndTime) values 
		(#{UserName},#{CompanyName},#{VisThing},#{CarTypeInnerId},#{CarNumber},#{StartTime},1,3,#{EndTime})
	</insert>
	
	<select id="selectVisInfoByCarNumber" parameterType="String" resultType="OrderRecord">
		select top 1 <include refid="OrderRecordSql"></include> from Visitor_OrderRecord 
		where VisitorCarCode = #{carNumber} order by RecordInnerId desc
	</select>
	
	<update id="updateCarRecord" parameterType="CarRecord">
		update Park_CarRecord set Flag = 1 where CarRecordInnerId = #{CarRecordInnerId}
	</update>
	
	<select id="selectChargeRecordInfo" parameterType="Map" resultType="ChargeRecord">
		select TOP ${rows} <include refid="ChargeRecordSql"></include>,Name,DepName 
	    from (select ROW_NUMBER() OVER (ORDER by ${sort} ${order}) AS RowNumber,
	    <include refid="ChargeRecordSql"></include> ,Name,DepName
		from Park_ChargeRecord where ChargeState = 3
		<if test="StartTime != null and StartTime != '' and EndTime != null and EndTime != '' ">
			and ChargeTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="CarNumber != null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%' 
		</if>
		<if test="CarType != null and CarType != '' ">
			and CarType in (select str2table from StrToTable(#{CarType}))
		</if>
		<if test="ChargeType != null and ChargeType != '' ">
			and ChargeType in (select str2table from StrToTable(#{ChargeType}))
		</if>
		<if test="UserName != null and UserName != '' ">
			and Name like '%${UserName}%' 
		</if>
		<if test="DepName != null and DepName != '' ">
			and DepName like '%${DepName}%' 
		</if>
		) AS a where RowNumber > ${start}
	</select>
	
	<select id="selectChargeRecordInfoTotal" parameterType="Map" resultType="Integer">
		select count(ChargeRecordInnerId) from Park_ChargeRecord where ChargeState = 3
		<if test="StartTime != null and StartTime != '' and EndTime != null and EndTime != '' ">
			and ChargeTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		</if>
		<if test="CarNumber != null and CarNumber != '' ">
			and CarNumber like '%${CarNumber}%' 
		</if>
		<if test="CarType != null and CarType != '' ">
			and CarType in (select str2table from StrToTable(#{CarType}))
		</if>
		<if test="ChargeType != null and ChargeType != '' ">
			and ChargeType in (select str2table from StrToTable(#{ChargeType}))
		</if>
		<if test="UserName != null and UserName != '' ">
			and Name like '%${UserName}%' 
		</if>
		<if test="DepName != null and DepName != '' ">
			and DepName like '%${DepName}%' 
		</if>
	</select>
	
	<select id="selectChargeRecordMax" parameterType="String" resultType="ChargeRecord">
		select top 1 * from Park_ChargeRecord
		where CarNumber = #{carNumber}
		order by ChargeRecordInnerId desc
	</select>
	
	<!-- 查询一段时间内的车辆进出记录 -->
	<select id="selectCarRecordByCarNumberAndTime" parameterType="Map" resultType="CarRecord">
		select <include refid="carRecordSql"></include> from Park_CarRecord where CarNumber = #{CarNumber}
		and EntryTime not between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime)
		and InOrOut = 0
	</select>
	
	<!-- 查询是否是公务车 -->
	<select id="selectGWCarInfo" parameterType="String" resultType="Integer">
		select count(GWCarInnerId) from Park_GWCar where CarNumber = #{CarNumber}
		and DelFlag = 0
	</select>
	
	<select id="selectTcConStatistics" parameterType="Map" resultType="ConStatistics">
		SELECT sum(DiscountMoney) as PersonMoney
			,DepartmentInnerId as RowName FROM ConLog_User
		where ConDatetime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime) 
		<if test="UserId !='' or UserName !=''">
			and UserInnerId in (SELECT UserInnerId FROM System_UserInfo where UserId like '%${UserId}%' and UserName like '%${UserName}%')
		</if>
		<if test="DepartmentInnerId !=null and DepartmentInnerId !=''">
			and DepartmentInnerId in (select str2table from StrToTable(#{DepartmentInnerId}))
		</if>
		group by DepartmentInnerId 
	</select>
	
	<select id="selectVisConStatistics" parameterType="Map" resultType="ConStatistics">
		SELECT sum(Money) as PersonMoney ,DepartmentInnerId as RowName FROM VisChargeRecordInfo 
		where ChargeTime between cast(#{StartTime} as datetime) and cast(#{EndTime} as datetime) and ChargeState =3
		and CarType = 3
		<if test="UserId !='' or UserName !=''">
			and UserInnerId in (SELECT UserInnerId FROM System_UserInfo where UserId like '%${UserId}%' and UserName like '%${UserName}%')
		</if>
		<if test="DepartmentInnerId !=null and DepartmentInnerId !=''">
			and DepartmentInnerId in (select str2table from StrToTable(#{DepartmentInnerId}))
		</if>
		group by DepartmentInnerId 
	</select>
	
	<select id="selectGQCarInfo" resultType="CarInfo">
		select * from Park_Car where getDate() >= EndTime 
	</select>
	
	<!-- 删除过期固定车辆 -->
	<delete id="deleteCarInfo" parameterType="Map">
		delete from Park_Car where CarInfoInnerId in (select str2table from StrToTable(#{carInnerId}))
	</delete>
	
	<select id="selectParkDate" parameterType="Map" resultType="ParkDate">
		select * from Park_Date where ParkDate = #{ParkDate} and ParkType = #{ParkType}
	</select>
	
	<update id="updateParkDate" parameterType="ParkDate">
		update Park_Date set ParkResidue = #{ParkResidue},ParkNum = #{ParkNum}
		where ParkDate = #{ParkDate} and ParkType = #{ParkType}
	</update>
	
	<select id="selectParkDataOneMonth" resultType="ParkDate">
		select * from Park_Date where ParkDate >= #{todayDate}
	</select>
	
	<select id="selectPayDepartment" resultType="Integer">
		select DepartmentInnerId from System_PayInfo where DelFlag = 0
	</select>
	<select id="selectPayCompany" resultType="Integer">
		select CompanyInnerId from System_PayInfo where DelFlag = 0
	</select>
	
	<select id="selectCarRecordTot" parameterType="CarRecord" resultType="Integer">
		select count(CarRecordInnerId) from Park_CarRecord
		where RecordID = #{RecordID}
	</select>
	
	<select id="selectGWTotal" parameterType="String" resultType="Integer">
		select count(GWCarInnerId) from Park_GWCar where CarNumber = #{carNumber} and DelFlag = 0
	</select>
	
	<insert id="insertLFChargeInfo" parameterType="Map">
		insert into Park_ChargeLF (LFRecordId,ChargeRecordInnerId) values (#{LFRecordId},#{ChargeRecordInnerId})
	</insert>
	
	<select id="selectLFChargeInfo" parameterType="Integer" resultType="Integer">
		select count(ChargeLFInnerId) from Park_ChargeLF where LFRecordId = #{LFRecordId}
	</select>
	
	<select id="selectLFMaxId" resultType="Integer">
		select Max(LFRecordId) from Park_ChargeLF 
	</select>
	
	<update id="updateVisRecordState" parameterType="Map">
		update Visitor_OrderRecord set  VisitorState = #{VisState} where RecordInnerId = #{RecordInnerId}
	</update>
	
	<select id="selectParkDateInfo" parameterType="Map" resultType="ParkDate">
		select TOP ${rows} ParkDate,ParkType,ParkNum,ParkResidue  from 
		(select ROW_NUMBER() OVER (ORDER by ParkDate asc) AS RowNumber,ParkDate,ParkType,ParkNum,ParkResidue 
		from Park_Date where ParkDate >= cast(#{DateTime} as datetime) ) AS a where RowNumber > 0
	</select>
	
	
</mapper>